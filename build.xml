<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="Fancy File Server">

	<loadfile property="app.version" srcfile="version.txt" />
	<loadproperties srcfile="build.properties" />

	<target name="clean">
		<delete dir="build" />
	</target>

	<target name="compile">
		<description>Compile sources</description>
		<mkdir dir="build/classes" />
		<javac srcdir="src" destdir="build/classes" source="1.6" target="1.6" includeantruntime="false">
			<classpath>
				<fileset dir="lib" />
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="compile">
		<description>Create runnable JAR with Jar-in-Jar Loader</description>
		<jar destfile="build/jars/fancy-file-server-${app.version}-${system}-${arch}.jar">
			<manifest>
				<attribute name="Main-Class" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader" />
				<attribute name="Rsrc-Main-Class" value="eu.knapsu.FancyFileServer" />
				<attribute name="Class-Path" value="." />
				<attribute name="Rsrc-Class-Path" value="./ httpcore-${app.httpcore.version}.jar swt-${app.swt.version}-${system}-${arch}.jar" />
				<attribute name="App-Name" value="${ant.project.name}" />
				<attribute name="App-Version" value="${app.version}" />
				<attribute name="App-License" value="GNU General Public License" />
			</manifest>
			<zipfileset src="res/jar-in-jar-loader.zip" />
			<fileset dir="build/classes" />
			<fileset dir="src" excludes="**/*.java" />
			<zipfileset dir="lib" includes="httpcore-${app.httpcore.version}.jar" />
			<zipfileset dir="lib" includes="swt-${app.swt.version}-${system}-${arch}.jar" />
			<fileset file="version.txt" />
			<fileset file="license.txt" />
		</jar>
	</target>

	<target name="jar-linux">
		<antcall target="jar">
			<param name="system" value="linux" />
			<param name="arch" value="32bit" />
		</antcall>
		<antcall target="jar">
			<param name="system" value="linux" />
			<param name="arch" value="64bit" />
		</antcall>
	</target>

	<target name="jar-macosx">
		<antcall target="jar">
			<param name="system" value="macosx" />
			<param name="arch" value="64bit" />
		</antcall>
	</target>

	<target name="jar-windows">
		<antcall target="jar">
			<param name="system" value="windows" />
			<param name="arch" value="32bit" />
		</antcall>
		<antcall target="jar">
			<param name="system" value="windows" />
			<param name="arch" value="64bit" />
		</antcall>
	</target>

	<target name="jar-all">
		<description>Create Runnable JARs for all supported systems</description>
		<antcall>
			<target name="jar-linux" />
			<target name="jar-macosx" />
			<target name="jar-windows" />
		</antcall>
	</target>

	<target name="build-linux">
		<antcall target="package-linux">
			<param name="arch" value="32bit" />
		</antcall>
		<antcall target="package-linux">
			<param name="arch" value="64bit" />
		</antcall>
	</target>

	<target name="package-linux" depends="jar-linux">
		<copy todir="build/linux-${arch}">
			<fileset dir="res/linux/${arch}" />
		</copy>
		<copy file="build/jars/fancy-file-server-${app.version}-linux-${arch}.jar" tofile="build/linux-${arch}/fancy-file-server.jar" />
		<zip destfile="build/Fancy_File_Server_${app.version}_Linux_${arch}.zip" whenempty="fail">
			<zipfileset dir="build/linux-${arch}">
				<exclude name="**/*.sh" />
			</zipfileset>
			<zipfileset dir="build/linux-${arch}" filemode="755">
				<include name="**/*.sh" />
			</zipfileset>
		</zip>
		<delete dir="build/linux-${arch}" />
	</target>

	<target name="build-macosx">
		<antcall target="package-macosx">
			<param name="arch" value="64bit" />
		</antcall>
	</target>

	<target name="package-macosx" depends="jar-macosx">
		<copy todir="build/macosx-${arch}">
			<fileset dir="res/macosx" />
		</copy>
		<property name="macosx.content" value="Fancy File Server.app/Contents/MacOS" />
		<copy file="build/jars/fancy-file-server-${app.version}-macosx-${arch}.jar" tofile="build/macosx-${arch}/${macosx.content}/fancy-file-server.jar" />
		<zip destfile="build/Fancy_File_Server_${app.version}_OSX_${arch}.zip" whenempty="fail">
			<zipfileset dir="build/macosx-${arch}">
				<exclude name="${macosx.content}/fancy-file-server" />
			</zipfileset>
			<zipfileset dir="build/macosx-${arch}" filemode="755">
				<include name="${macosx.content}/fancy-file-server" />
			</zipfileset>
		</zip>
		<delete dir="build/macosx-${arch}" />
	</target>

	<target name="build-windows" depends="jar-windows">
		<mkdir dir="build/windows-32bit" />
		<launch4j configFile="res/windows/launch4j/launch4j-32bit.xml" jar="build/jars/fancy-file-server-${app.version}-windows-32bit.jar" outfile="build/windows-32bit/Fancy File Server.exe" />
		<antcall target="package-windows">
			<param name="arch" value="32bit" />
		</antcall>
		
		<mkdir dir="build/windows-64bit" />
		<launch4j configFile="res/windows/launch4j/launch4j-64bit.xml" jar="build/jars/fancy-file-server-${app.version}-windows-64bit.jar" outfile="build/windows-64bit/Fancy File Server.exe" />
		<antcall target="package-windows">
			<param name="arch" value="64bit" />
		</antcall>
	</target>

	<target name="package-windows">
		<zip destfile="build/Fancy_File_Server_${app.version}_Windows_${arch}.zip" whenempty="fail">
			<zipfileset dir="build/windows-${arch}" />
		</zip>
		<delete dir="build/windows-${arch}" />
	</target>

	<target name="build-all">
		<description>Build packages for all supported systems</description>
		<antcall>
			<target name="build-linux" />
			<target name="build-macosx" />
			<target name="build-windows" />
		</antcall>
	</target>

	<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j.dir}/launch4j.jar:${launch4j.dir}/lib/xstream.jar" />

</project>
